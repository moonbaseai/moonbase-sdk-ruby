module MoonbaseSDK
  module Models
    type inbox =
      {
        id: String,
        links: MoonbaseSDK::Inbox::Links,
        name: String,
        type: :inbox,
        created_at: Time,
        tagset: MoonbaseSDK::Tagset,
        updated_at: Time
      }

    class Inbox < MoonbaseSDK::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor links: MoonbaseSDK::Inbox::Links

      attr_accessor name: String

      attr_accessor type: :inbox

      attr_reader created_at: Time?

      def created_at=: (Time) -> Time

      attr_reader tagset: MoonbaseSDK::Tagset?

      def tagset=: (MoonbaseSDK::Tagset) -> MoonbaseSDK::Tagset

      attr_reader updated_at: Time?

      def updated_at=: (Time) -> Time

      def initialize: (
        id: String,
        links: MoonbaseSDK::Inbox::Links,
        name: String,
        ?created_at: Time,
        ?tagset: MoonbaseSDK::Tagset,
        ?updated_at: Time,
        ?type: :inbox
      ) -> void

      def to_hash: -> {
        id: String,
        links: MoonbaseSDK::Inbox::Links,
        name: String,
        type: :inbox,
        created_at: Time,
        tagset: MoonbaseSDK::Tagset,
        updated_at: Time
      }

      type links = { self_: String, tagset: String }

      class Links < MoonbaseSDK::Internal::Type::BaseModel
        attr_accessor self_: String

        attr_reader tagset: String?

        def tagset=: (String) -> String

        def initialize: (self_: String, ?tagset: String) -> void

        def to_hash: -> { self_: String, tagset: String }
      end
    end
  end
end
