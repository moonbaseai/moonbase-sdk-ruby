module MoonbaseSDK
  module Models
    type view_retrieve_params =
      { include: ::Array[MoonbaseSDK::Models::ViewRetrieveParams::include_] }
      & MoonbaseSDK::Internal::Type::request_parameters

    class ViewRetrieveParams < MoonbaseSDK::Internal::Type::BaseModel
      extend MoonbaseSDK::Internal::Type::RequestParameters::Converter
      include MoonbaseSDK::Internal::Type::RequestParameters

      attr_reader include: ::Array[MoonbaseSDK::Models::ViewRetrieveParams::include_]?

      def include=: (
        ::Array[MoonbaseSDK::Models::ViewRetrieveParams::include_]
      ) -> ::Array[MoonbaseSDK::Models::ViewRetrieveParams::include_]

      def initialize: (
        ?include: ::Array[MoonbaseSDK::Models::ViewRetrieveParams::include_],
        ?request_options: MoonbaseSDK::request_opts
      ) -> void

      def to_hash: -> {
        include: ::Array[MoonbaseSDK::Models::ViewRetrieveParams::include_],
        request_options: MoonbaseSDK::RequestOptions
      }

      type include_ = :collection

      module Include
        extend MoonbaseSDK::Internal::Type::Enum

        COLLECTION: :collection

        def self?.values: -> ::Array[MoonbaseSDK::Models::ViewRetrieveParams::include_]
      end
    end
  end
end
