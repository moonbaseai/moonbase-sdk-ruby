module MoonbaseSDK
  module Models
    type program_message_send_params =
      {
        person: MoonbaseSDK::ProgramMessageSendParams::Person,
        program_template_id: String,
        custom_variables: ::Hash[Symbol, top]
      }
      & MoonbaseSDK::Internal::Type::request_parameters

    class ProgramMessageSendParams < MoonbaseSDK::Internal::Type::BaseModel
      extend MoonbaseSDK::Internal::Type::RequestParameters::Converter
      include MoonbaseSDK::Internal::Type::RequestParameters

      attr_accessor person: MoonbaseSDK::ProgramMessageSendParams::Person

      attr_accessor program_template_id: String

      attr_reader custom_variables: ::Hash[Symbol, top]?

      def custom_variables=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

      def initialize: (
        person: MoonbaseSDK::ProgramMessageSendParams::Person,
        program_template_id: String,
        ?custom_variables: ::Hash[Symbol, top],
        ?request_options: MoonbaseSDK::request_opts
      ) -> void

      def to_hash: -> {
        person: MoonbaseSDK::ProgramMessageSendParams::Person,
        program_template_id: String,
        custom_variables: ::Hash[Symbol, top],
        request_options: MoonbaseSDK::RequestOptions
      }

      type person = { email: String }

      class Person < MoonbaseSDK::Internal::Type::BaseModel
        attr_accessor email: String

        def initialize: (email: String) -> void

        def to_hash: -> { email: String }
      end
    end
  end
end
