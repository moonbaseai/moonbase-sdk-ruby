module MoonbaseSDK
  module Models
    type choice = { option: MoonbaseSDK::Choice::Option, type: :"value/choice" }

    class Choice < MoonbaseSDK::Internal::Type::BaseModel
      attr_accessor option: MoonbaseSDK::Choice::Option

      attr_accessor type: :"value/choice"

      def initialize: (
        option: MoonbaseSDK::Choice::Option,
        ?type: :"value/choice"
      ) -> void

      def to_hash: -> {
        option: MoonbaseSDK::Choice::Option,
        type: :"value/choice"
      }

      type option = { id: String, type: :field_option, label: String }

      class Option < MoonbaseSDK::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor type: :field_option

        attr_reader label: String?

        def label=: (String) -> String

        def initialize: (
          id: String,
          ?label: String,
          ?type: :field_option
        ) -> void

        def to_hash: -> { id: String, type: :field_option, label: String }
      end
    end
  end
end
