module MoonbaseSDK
  module Models
    type organizer =
      {
        id: String,
        email: String,
        links: MoonbaseSDK::Organizer::Links,
        type: :organizer,
        created_at: Time,
        updated_at: Time
      }

    class Organizer < MoonbaseSDK::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor email: String

      attr_accessor links: MoonbaseSDK::Organizer::Links

      attr_accessor type: :organizer

      attr_reader created_at: Time?

      def created_at=: (Time) -> Time

      attr_reader updated_at: Time?

      def updated_at=: (Time) -> Time

      def initialize: (
        id: String,
        email: String,
        links: MoonbaseSDK::Organizer::Links,
        ?created_at: Time,
        ?updated_at: Time,
        ?type: :organizer
      ) -> void

      def to_hash: -> {
        id: String,
        email: String,
        links: MoonbaseSDK::Organizer::Links,
        type: :organizer,
        created_at: Time,
        updated_at: Time
      }

      type links = { organization: String, person: String }

      class Links < MoonbaseSDK::Internal::Type::BaseModel
        attr_accessor organization: String

        attr_accessor person: String

        def initialize: (organization: String, person: String) -> void

        def to_hash: -> { organization: String, person: String }
      end
    end
  end
end
