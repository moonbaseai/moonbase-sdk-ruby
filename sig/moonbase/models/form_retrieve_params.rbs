module Moonbase
  module Models
    type form_retrieve_params =
      { include: ::Array[Moonbase::Models::FormRetrieveParams::include_] }
      & Moonbase::Internal::Type::request_parameters

    class FormRetrieveParams < Moonbase::Internal::Type::BaseModel
      extend Moonbase::Internal::Type::RequestParameters::Converter
      include Moonbase::Internal::Type::RequestParameters

      attr_reader include: ::Array[Moonbase::Models::FormRetrieveParams::include_]?

      def include=: (
        ::Array[Moonbase::Models::FormRetrieveParams::include_]
      ) -> ::Array[Moonbase::Models::FormRetrieveParams::include_]

      def initialize: (
        ?include: ::Array[Moonbase::Models::FormRetrieveParams::include_],
        ?request_options: Moonbase::request_opts
      ) -> void

      def to_hash: -> {
        include: ::Array[Moonbase::Models::FormRetrieveParams::include_],
        request_options: Moonbase::RequestOptions
      }

      type include_ = :"collection.fields"

      module Include
        extend Moonbase::Internal::Type::Enum

        COLLECTION_FIELDS: :"collection.fields"

        def self?.values: -> ::Array[Moonbase::Models::FormRetrieveParams::include_]
      end
    end
  end
end
