module Moonbase
  module Models
    type inbox_conversation_retrieve_params =
      {
        include: ::Array[Moonbase::Models::InboxConversationRetrieveParams::include_]
      }
      & Moonbase::Internal::Type::request_parameters

    class InboxConversationRetrieveParams < Moonbase::Internal::Type::BaseModel
      extend Moonbase::Internal::Type::RequestParameters::Converter
      include Moonbase::Internal::Type::RequestParameters

      attr_reader include: ::Array[Moonbase::Models::InboxConversationRetrieveParams::include_]?

      def include=: (
        ::Array[Moonbase::Models::InboxConversationRetrieveParams::include_]
      ) -> ::Array[Moonbase::Models::InboxConversationRetrieveParams::include_]

      def initialize: (
        ?include: ::Array[Moonbase::Models::InboxConversationRetrieveParams::include_],
        ?request_options: Moonbase::request_opts
      ) -> void

      def to_hash: -> {
        include: ::Array[Moonbase::Models::InboxConversationRetrieveParams::include_],
        request_options: Moonbase::RequestOptions
      }

      type include_ = :addresses | :tags

      module Include
        extend Moonbase::Internal::Type::Enum

        ADDRESSES: :addresses
        TAGS: :tags

        def self?.values: -> ::Array[Moonbase::Models::InboxConversationRetrieveParams::include_]
      end
    end
  end
end
