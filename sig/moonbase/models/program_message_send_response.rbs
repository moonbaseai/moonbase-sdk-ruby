module Moonbase
  module Models
    type program_message_send_response =
      {
        id: String,
        created_at: Time,
        links: Moonbase::Models::ProgramMessageSendResponse::Links,
        program_template: Moonbase::ProgramTemplate,
        type: :program_message,
        updated_at: Time
      }

    class ProgramMessageSendResponse < Moonbase::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor created_at: Time

      attr_accessor links: Moonbase::Models::ProgramMessageSendResponse::Links

      attr_accessor program_template: Moonbase::ProgramTemplate

      attr_accessor type: :program_message

      attr_accessor updated_at: Time

      def initialize: (
        id: String,
        created_at: Time,
        links: Moonbase::Models::ProgramMessageSendResponse::Links,
        program_template: Moonbase::ProgramTemplate,
        updated_at: Time,
        ?type: :program_message
      ) -> void

      def to_hash: -> {
        id: String,
        created_at: Time,
        links: Moonbase::Models::ProgramMessageSendResponse::Links,
        program_template: Moonbase::ProgramTemplate,
        type: :program_message,
        updated_at: Time
      }

      type links = { program_template: String }

      class Links < Moonbase::Internal::Type::BaseModel
        attr_accessor program_template: String

        def initialize: (program_template: String) -> void

        def to_hash: -> { program_template: String }
      end
    end
  end
end
