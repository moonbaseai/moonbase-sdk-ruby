module Moonbase
  module Models
    type social_x_value =
      { profile: Moonbase::SocialXValue::Profile, type: :"value/uri/social_x" }

    class SocialXValue < Moonbase::Internal::Type::BaseModel
      attr_accessor profile: Moonbase::SocialXValue::Profile

      attr_accessor type: :"value/uri/social_x"

      def initialize: (
        profile: Moonbase::SocialXValue::Profile,
        ?type: :"value/uri/social_x"
      ) -> void

      def to_hash: -> {
        profile: Moonbase::SocialXValue::Profile,
        type: :"value/uri/social_x"
      }

      type profile = { url: String, username: String }

      class Profile < Moonbase::Internal::Type::BaseModel
        attr_reader url: String?

        def url=: (String) -> String

        attr_reader username: String?

        def username=: (String) -> String

        def initialize: (?url: String, ?username: String) -> void

        def to_hash: -> { url: String, username: String }
      end
    end
  end
end
