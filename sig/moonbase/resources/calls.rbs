module Moonbase
  module Resources
    class Calls
      def create: (
        direction: Moonbase::Models::CallCreateParams::direction,
        participants: ::Array[Moonbase::CallCreateParams::Participant],
        provider: String,
        provider_id: String,
        start_at: Time,
        status: Moonbase::Models::CallCreateParams::status,
        ?answered_at: Time,
        ?end_at: Time,
        ?provider_metadata: ::Hash[Symbol, top],
        ?recordings: ::Array[Moonbase::CallCreateParams::Recording],
        ?transcript: Moonbase::CallCreateParams::Transcript,
        ?request_options: Moonbase::request_opts
      ) -> Moonbase::Call

      def upsert: (
        direction: Moonbase::Models::CallUpsertParams::direction,
        participants: ::Array[Moonbase::CallUpsertParams::Participant],
        provider: String,
        provider_id: String,
        start_at: Time,
        status: Moonbase::Models::CallUpsertParams::status,
        ?answered_at: Time,
        ?end_at: Time,
        ?provider_metadata: ::Hash[Symbol, top],
        ?recordings: ::Array[Moonbase::CallUpsertParams::Recording],
        ?transcript: Moonbase::CallUpsertParams::Transcript,
        ?request_options: Moonbase::request_opts
      ) -> Moonbase::Call

      def initialize: (client: Moonbase::Client) -> void
    end
  end
end
